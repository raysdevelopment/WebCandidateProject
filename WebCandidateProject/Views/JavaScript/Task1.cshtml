@model WebCandidateProject.Models.User

@{
    ViewBag.Title = "MVC Form Validation";
}

<h2>MVC Form Validation</h2>
<div id="instructions" class="row javascript-code">
    <p>
        Below is a simple form to create a new user. Modify the form so the user can also submit their last name and make the field required.
    </p>
    <ul>
        <li>Add the last name label and field to the form</li>
        <li>Make the last name required. Validation should happen both client and server side.</li>
        <li>After the form is submitted display a success message.</li>
    </ul>
</div>
@using (Html.BeginForm("CreateNewUser", "JavaScript"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal max-w-600">
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, "First Name", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, "Address", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.State, "State", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Zip, "Zip", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <input type="submit" value="Add a new user" class="btn btn-default btn-warning" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-2 pad-top-20">
                <p>
                    <a class="btn btn-primary" href="/">&laquo; Previous</a>
                </p>
            </div>
            <div class="col-md-2 col-md-offset-8 pad-top-20 next">
                <p>
                    <a class="btn btn-primary" href="/JavaScript/Task2">Next &raquo;</a>
                </p>
            </div>
        </div>
    </div>
}

@section scripts{

    @Scripts.Render("~/bundles/jquery",
        "~/bundles/jqueryval",
        "~/bundles/bootstrap",
        "~/bundles/third-party",
        "~/bundles/angular")

    <script src="@Url.Content("/Scripts/App/task1.js")" type="text/javascript"></script>
}